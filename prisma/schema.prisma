generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  password    String
  email       String       @unique
  roleId      Int
  groups      Group[]
  votes       Vote[]
  submissions Submission[]
  Question    Question[]
  Role        Role[]
}

model Role {
  id         Int     @id @default(autoincrement())
  userId     Int
  groupId    Int
  User       User    @relation(fields: [userId], references: [id])
  Group      Group   @relation(fields: [groupId], references: [id])
  isAdmitted Boolean @default(true)
}

model Group {
  id        Int        @id @default(autoincrement())
  name      String
  questions Question[]
  User      User?      @relation(fields: [userId], references: [id])
  userId    Int?
  Role      Role[]
}

model Question {
  id           Int        @id @default(autoincrement())
  title        String
  groupId      Int
  userId       Int
  submissionId Int
  groups       Group      @relation(fields: [groupId], references: [id])
  users        User       @relation(fields: [userId], references: [id])
  submissions  Submission @relation(fields: [submissionId], references: [id])
  result       String
}

model Submission {
  id         Int        @id @default(autoincrement())
  title      String
  link       String
  userId     Int
  questionId Int
  votes      Vote[]
  User       User       @relation(fields: [userId], references: [id])
  Question   Question[]
}

model Vote {
  id           Int        @id @default(autoincrement())
  userId       Int
  submissionId Int
  User         User       @relation(fields: [userId], references: [id])
  Submission   Submission @relation(fields: [submissionId], references: [id])
}
