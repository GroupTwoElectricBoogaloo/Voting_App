generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  username   String       @unique
  password   String
  email      String       @unique
  Vote       Vote[]
  Submission Submission[]
  Question   Question[]
  Role       Role[]
  Group      Group[]
}

model Role {
  id          Int     @id @default(autoincrement())
  user_id     Int
  group_id    Int
  user        User    @relation(fields: [user_id], references: [id])
  group       Group   @relation(fields: [group_id], references: [id])
  is_admitted Boolean @default(true)
  is_creator  Boolean @default(false)
}

model Group {
  id          Int        @id @default(autoincrement())
  name        String
  questions   Question[]
  User        User?      @relation(fields: [userId], references: [id])
  userId      Int?
  Role        Role[]
  access_code String     @default("")
}

model Question {
  id         Int          @id @default(autoincrement())
  title      String
  group_id   Int
  user_id    Int
  is_active  Boolean      @default(true)
  groups     Group        @relation(fields: [group_id], references: [id])
  users      User         @relation(fields: [user_id], references: [id])
  Submission Submission[]
}

model Submission {
  id          Int      @id @default(autoincrement())
  link        String
  user_id     Int
  question_id Int
  Vote        Vote[]
  user        User     @relation(fields: [user_id], references: [id])
  question    Question @relation(fields: [question_id], references: [id])
}

model Vote {
  id           Int        @id @default(autoincrement())
  user_id      Int
  submissionId Int
  user         User       @relation(fields: [user_id], references: [id])
  submission   Submission @relation(fields: [submissionId], references: [id])
}
